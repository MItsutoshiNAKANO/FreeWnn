#
#   $Id: Makefile.in,v 1.10 2003-05-11 18:31:44 hiroo Exp $
#

#
# FreeWnn is a network-extensible Kana-to-Kanji conversion system.
# This file is part of FreeWnn.
# 
# Copyright Kyoto University Research Institute for Mathematical Sciences
#                 1987, 1988, 1989, 1990, 1991, 1992
# Copyright OMRON Corporation. 1987, 1988, 1989, 1990, 1991, 1992, 1999
# Copyright ASTEC, Inc. 1987, 1988, 1989, 1990, 1991, 1992
# Copyright FreeWnn Project 1999, 2000, 2001, 2003
# 
# Maintainer:  FreeWnn Project   <freewnn@tomo.gr.jp>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

include @top_srcdir@/makerule.mk
top_builddir = ../..

INSTALL      = @INSTALL@ $(INSTALLFLAGS)

       INCLUDES = -I$(WNNINCLUDESRC) -I$(TOP)
        DEFINES = $(WNNDEFINES) $(WNNLANGDEF)
       LINTLIBS =

SRC1= jlv3.c
OBJ1= jlv3.o
SRC2= $(WNNETCSRC)/gethinsi.c
OBJ2= gethinsi.o
SRC3= $(WNNETCSRC)/sstrings.c
OBJ3= sstrings.o
SRC4= $(WNNETCSRC)/xutoj.c
OBJ4= xutoj.o
LOCAL_RKSRCS= $(WNNROMKANSRC)/rk_bltinfn.c 	$(WNNROMKANSRC)/rk_main.c 	$(WNNROMKANSRC)/rk_modread.c 	$(WNNROMKANSRC)/rk_read.c 	$(WNNROMKANSRC)/rk_vars.c

LOCAL_RKOBJS= $(WNNROMKANSRC)/rk_bltinfn.o 	$(WNNROMKANSRC)/rk_main.o 	$(WNNROMKANSRC)/rk_modread.o 	$(WNNROMKANSRC)/rk_read.o 	$(WNNROMKANSRC)/rk_vars.o

LOCAL_ETCSRCS= $(WNNETCSRC)/msg.c $(WNNETCSRC)/yincoding.c $(WNNETCSRC)/py_table.c $(WNNETCSRC)/zy_table.c $(WNNETCSRC)/strings.c $(WNNETCSRC)/bcopy.c $(WNNETCSRC)/mkdir.c

LOCAL_ETCOBJS= $(WNNJLIBSRC)/msg.o $(WNNJLIBSRC)/yincoding.o $(WNNJLIBSRC)/py_table.o $(WNNJLIBSRC)/zy_table.o $(WNNJLIBSRC)/strings.o $(WNNJLIBSRC)/bcopy.o $(WNNJLIBSRC)/mkdir.o

LOCAL_JLIBSRCS= $(WNNJLIBSRC)/js.c $(WNNJLIBSRC)/wnnerrmsg.c $(WNNJLIBSRC)/jl.c

LOCAL_JLIBOBJS= $(WNNJLIBSRC)/js.o $(WNNJLIBSRC)/wnnerrmsg.o $(WNNJLIBSRC)/jl.o

SRCS= $(SRC1) $(SRC2) $(SRC3) $(SRC4)
OBJS= $(OBJ1) $(OBJ2) $(OBJ3) $(OBJ4) $(LOCAL_ETCOBJS) $(LOCAL_RKOBJS) $(LOCAL_JLIBOBJS)

clean::
	$(RM) -r .libs
	$(RM) *.lo *.la

all::

includes::

.c.o:
	$(RM) $@
	$(LIBTOOL) $(CC) -c $(CFLAGS) $(_NOOP_) $*.c

all:: libjd.la

libjd.la: $(OBJS) $(EXTRALIBRARYDEPS)
	$(LIBTOOL) $(CC) -o $@ $(OBJS:.o=.lo) -rpath $(WNNLIBDIR) -version-info $(WNNJLIBVERSION)

lintlib:: llib-ljd.ln

llib-ljd.ln: $(SRCS) $(EXTRALIBRARYDEPS)
	$(RM) $@
	$(LINT) $(LINTLIBFLAG)jd $(LINTFLAGS) $(SRCS)

install:: libjd.la
	@if [ -d $(DESTDIR)$(WNNLIBDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(WNNLIBDIR)); fi
	$(LIBTOOL) $(INSTALL) $(INSTLIBFLAGS) libjd.la $(DESTDIR)$(WNNLIBDIR)

install:: jlib.h
	@if [ -d $(DESTDIR)$(JWNNINCDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(JWNNINCDIR)); fi
	$(INSTALL) $(INSTDATFLAGS) jlib.h $(DESTDIR)$(JWNNINCDIR)/jlib.h

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

$(WNNJLIB)::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(WNNJLIBSRC) ;\
	do \
	echo "making" $(WNNJLIB) "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) all); \
	done

$(OBJ2) : $(SRC2)
	$(LIBTOOL) $(CC) -c $(CFLAGS)  $(WNNETCSRC)/`basename $@ .o`.c

$(OBJ3) : $(SRC3)
	$(LIBTOOL) $(CC) -c $(CFLAGS)  $(WNNETCSRC)/`basename $@ .o`.c

$(OBJ4) : $(SRC4)
	$(LIBTOOL) $(CC) -c $(CFLAGS)  $(WNNETCSRC)/`basename $@ .o`.c

depend:: .depend

